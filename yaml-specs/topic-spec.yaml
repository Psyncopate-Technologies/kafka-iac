pipeline_version: str(required=False)
topic: include('topic_definition', required=True)
---
topic_definition:
  name: str(min=1, max=249, regex='^[a-zA-Z0-9._-]+$')
  alias_name: str(min=1, max=249, regex='^[a-zA-Z0-9_]+$', required=False)
  description: str(max=500, required=False)
  mal_acronym: str(max=10)
  srb_review_number: str(max=10)
  partitions: int(min=1, required=False)
  retention: str(regex='^[0-9]+[smhd]$', required=False)
  cleanup_policy: enum('delete', 'compact', required=False)
  config: include('topic_config_props', required=False)
---
topic_config_props:
    delete.retention.ms: int(required=False)
    max.message.bytes: int(required=False)
    max.compaction.lag.ms: int(required=False)
    message.timestamp.difference.max.ms: int(required=False)
    message.timestamp.before.max.ms: int(required=False)
    message.timestamp.after.max.ms: int(required=False)
    message.timestamp.type: enum('CreateTime', 'LogAppendTime', required=False)
    min.compaction.lag.ms: int(required=False)
    min.insync.replicas: int(required=False)
    retention.bytes: int(required=False)
    retention.ms: int(required=False)
    segment.bytes: int(required=False)
    segment.ms: int(required=False)
    confluent.key.schema.validation: bool(required=False)
    confluent.value.schema.validation: bool(required=False)
    confluent.key.subject.name.strategy: str(required=False)
    confluent.value.subject.name.strategy: str(required=False)
